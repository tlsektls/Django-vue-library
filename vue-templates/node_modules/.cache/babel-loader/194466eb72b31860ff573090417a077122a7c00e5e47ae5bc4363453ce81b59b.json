{"ast":null,"code":"import { getAPI } from '../../axios-api';\nexport default {\n  name: 'Map',\n  data() {\n    return {\n      MapData: []\n    };\n  },\n  mounted() {\n    if (window.kakao && window.kakao.maps) {\n      this.initMap();\n    } else {\n      const script = document.createElement(\"script\");\n      /* global kakao */\n      script.onload = () => kakao.maps.load(this.initMap);\n      script.type = 'text/javascript';\n      script.src = \"//dapi.kakao.com/v2/maps/sdk.js?&appkey=c39b70c857a7f27e0adc5039c85b7e66\";\n      document.head.appendChild(script);\n    }\n  },\n  methods: {\n    initMap() {\n      const container = document.getElementById(\"map\");\n      const options = {\n        //지도를 생성할 때 필요한 기본 옵션\n        center: new kakao.maps.LatLng(33.450701, 126.570667),\n        level: 3 //지도의 레벨(확대, 축소 정도)\n      };\n\n      //지도 객체를 등록합니다.\n      //지도 객체는 반응형 관리 대상이 아니므로 initMap에서 선언합니다.\n      this.map = new kakao.maps.Map(container, options);\n\n      // 주소-좌표 변환 객체를 생성합니다\n      var geocoder = new kakao.maps.services.Geocoder();\n\n      // 주소로 좌표를 검색합니다\n      geocoder.addressSearch('경기 용인시 기흥구 흥덕1로 13 흥덕IT밸리', function (result, status) {\n        // 정상적으로 검색이 완료됐으면 \n        if (status === kakao.maps.services.Status.OK) {\n          var coords = new kakao.maps.LatLng(result[0].y, result[0].x);\n\n          // 결과값으로 받은 위치를 마커로 표시합니다\n          var marker = new kakao.maps.Marker({\n            map: map,\n            position: coords\n          });\n\n          // 지도의 중심을 결과값으로 받은 위치로 이동시킵니다\n          this.map.setCenter(coords);\n        }\n      });\n    },\n    displayMarker(markerPositions) {\n      if (this.markers.length > 0) {\n        this.markers.forEach(marker => marker.setMap(null));\n      }\n      const positions = markerPositions.map(position => new kakao.maps.LatLng(...position));\n      if (positions.length > 0) {\n        this.markers = positions.map(position => new kakao.maps.Marker({\n          map: this.map,\n          position\n        }));\n        const bounds = positions.reduce((bounds, latlng) => bounds.extend(latlng), new kakao.maps.LatLngBounds());\n        this.map.setBounds(bounds);\n      }\n    }\n  }\n  //created () {\n  //  getAPI.get('/map/',)\n  //    .then(response => {\n  //      console.log(response)\n  //      console.log('Map API has recieved data')\n  //      this.MapData = response.data\n  //    })\n  //    .catch(err => {\n  //      console.log('Map' + err)\n  //    })\n  //}\n};","map":{"version":3,"mappings":"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","names":["getAPI","name","data","MapData","mounted","window","kakao","maps","initMap","script","document","createElement","onload","load","type","src","head","appendChild","methods","container","getElementById","options","center","LatLng","level","map","Map","geocoder","services","Geocoder","addressSearch","result","status","Status","OK","coords","y","x","marker","Marker","position","setCenter","displayMarker","markerPositions","markers","length","forEach","setMap","positions","bounds","reduce","latlng","extend","LatLngBounds","setBounds"],"sourceRoot":"","sources":["/Users/isg/Desktop/work/webstudy/Django-vue-library/vue-templates/src/components/inner/Map.vue"],"sourcesContent":["<template>\n  <div id=\"map\" style=\"width:500px;height:400px;\"></div>\n</template>\n\n\n<script>\n  import { getAPI } from '../../axios-api'\n  export default {\n    name: 'Map',\n    data () {\n      return {\n        MapData: [],\n      }\n    },\n    mounted() {\n      if (window.kakao && window.kakao.maps) {\n        this.initMap();\n      } else {\n        const script = document.createElement(\"script\");\n        /* global kakao */\n        script.onload = () => kakao.maps.load(this.initMap);\n        script.type = 'text/javascript';\n        script.src = \"//dapi.kakao.com/v2/maps/sdk.js?&appkey=c39b70c857a7f27e0adc5039c85b7e66\";\n\n        document.head.appendChild(script);\n\n      }\n    },\n    methods: {\n      initMap() {\n        const container = document.getElementById(\"map\");\n        const options = { //지도를 생성할 때 필요한 기본 옵션\n          center: new kakao.maps.LatLng(33.450701, 126.570667),\n          level: 3 //지도의 레벨(확대, 축소 정도)\n        };\n\n        //지도 객체를 등록합니다.\n        //지도 객체는 반응형 관리 대상이 아니므로 initMap에서 선언합니다.\n        this.map = new kakao.maps.Map(container, options);\n        \n        // 주소-좌표 변환 객체를 생성합니다\n        var geocoder = new kakao.maps.services.Geocoder();\n\n        // 주소로 좌표를 검색합니다\n        geocoder.addressSearch('경기 용인시 기흥구 흥덕1로 13 흥덕IT밸리', function(result, status) {\n          // 정상적으로 검색이 완료됐으면 \n          if (status === kakao.maps.services.Status.OK) {\n            var coords = new kakao.maps.LatLng(result[0].y, result[0].x);\n\n            // 결과값으로 받은 위치를 마커로 표시합니다\n            var marker = new kakao.maps.Marker({\n                map: map,\n                position: coords\n            });\n\n            // 지도의 중심을 결과값으로 받은 위치로 이동시킵니다\n            this.map.setCenter(coords);\n          }\n        });    \n      },\n      displayMarker(markerPositions) {\n        if (this.markers.length > 0) {\n          this.markers.forEach((marker) => marker.setMap(null));\n        }\n\n        const positions = markerPositions.map(\n          (position) => new kakao.maps.LatLng(...position)\n        );\n\n        if (positions.length > 0) {\n          this.markers = positions.map(\n            (position) =>\n              new kakao.maps.Marker({\n                map: this.map,\n                position,\n              })\n          );\n\n          const bounds = positions.reduce(\n            (bounds, latlng) => bounds.extend(latlng),\n            new kakao.maps.LatLngBounds()\n          );\n\n          this.map.setBounds(bounds);\n        }\n      },\n    },\n    //created () {\n    //  getAPI.get('/map/',)\n    //    .then(response => {\n    //      console.log(response)\n    //      console.log('Map API has recieved data')\n    //      this.MapData = response.data\n    //    })\n    //    .catch(err => {\n    //      console.log('Map' + err)\n    //    })\n    //}\n  }\n</script>\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}