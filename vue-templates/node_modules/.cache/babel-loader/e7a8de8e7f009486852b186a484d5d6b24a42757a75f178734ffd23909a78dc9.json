{"ast":null,"code":"export default {\n  name: \"Map\",\n  data() {},\n  mounted() {\n    if (window.kakao && window.kakao.maps) {\n      this.initMap();\n    } else {\n      const script = document.createElement(\"script\");\n      /* global kakao */\n      script.onload = () => kakao.maps.load(this.initMap);\n      script.src = \"//dapi.kakao.com/v2/maps/sdk.js?autoload=false&appkey=c39b70c857a7f27e0adc5039c85b7e66&libraries=services\";\n      document.head.appendChild(script);\n    }\n  },\n  methods: {\n    initMap() {\n      const container = document.getElementById(\"map\");\n      const options = {\n        center: new kakao.maps.LatLng(33.450701, 126.570667),\n        level: 3\n      };\n      this.map = new kakao.maps.Map(container, options);\n\n      // 주소-좌표 변환 객체를 생성합니다\n      this.geocoder = new kakao.maps.services.Geocoder();\n\n      // 주소로 좌표를 검색합니다\n      this.geocoder.addressSearch('경기 용인시 기흥구 흥덕1로 13 흥덕IT밸리', (result, status) => {\n        // 정상적으로 검색이 완료됐으면 \n        if (status === kakao.maps.services.Status.OK) {\n          let bounds = new kakao.maps.LatLngBounds();\n          console.log(result);\n          for (let i = 0; i < result.length; i++) {\n            let data = result[i];\n            bounds.extend(new kakao.maps.LatLng(data.y, data.x));\n            let coords = new kakao.maps.LatLng(data.y, data.x);\n          }\n          this.map.setBounds(bounds);\n\n          //const coords = new kakao.maps.LatLng(result[0].y, result[0].x);\n\n          // 결과값으로 받은 위치를 마커로 표시합니다\n          const marker = new kakao.maps.Marker({\n            map: map,\n            position: coords\n          });\n\n          // 지도의 중심을 결과값으로 받은 위치로 이동시킵니다\n          this.map.setCenter(coords);\n        } else {\n          console.log('error');\n        }\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"AAOA,eAAe;EACbA,IAAI,EAAE,KAAK;EACXC,IAAI,GAAG,CACP,CAAC;EACDC,OAAO,GAAG;IACR,IAAIC,MAAM,CAACC,KAAI,IAAKD,MAAM,CAACC,KAAK,CAACC,IAAI,EAAE;MACrC,IAAI,CAACC,OAAO,EAAE;IAChB,OAAO;MACL,MAAMC,MAAK,GAAIC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;MAC/C;MACAF,MAAM,CAACG,MAAK,GAAI,MAAMN,KAAK,CAACC,IAAI,CAACM,IAAI,CAAC,IAAI,CAACL,OAAO,CAAC;MACnDC,MAAM,CAACK,GAAE,GAAI,2GAA2G;MAExHJ,QAAQ,CAACK,IAAI,CAACC,WAAW,CAACP,MAAM,CAAC;IACnC;EACF,CAAC;EACDQ,OAAO,EAAE;IACPT,OAAO,GAAG;MACR,MAAMU,SAAQ,GAAIR,QAAQ,CAACS,cAAc,CAAC,KAAK,CAAC;MAChD,MAAMC,OAAM,GAAI;QACdC,MAAM,EAAE,IAAIf,KAAK,CAACC,IAAI,CAACe,MAAM,CAAC,SAAS,EAAE,UAAU,CAAC;QACpDC,KAAK,EAAE;MACT,CAAC;MAED,IAAI,CAACC,GAAE,GAAI,IAAIlB,KAAK,CAACC,IAAI,CAACkB,GAAG,CAACP,SAAS,EAAEE,OAAO,CAAC;;MAEjD;MACA,IAAI,CAACM,QAAO,GAAI,IAAIpB,KAAK,CAACC,IAAI,CAACoB,QAAQ,CAACC,QAAQ,EAAE;;MAElD;MACA,IAAI,CAACF,QAAQ,CAACG,aAAa,CAAC,2BAA2B,EAAE,CAACC,MAAM,EAAEC,MAAM,KAAK;QAC3E;QACA,IAAIA,MAAK,KAAMzB,KAAK,CAACC,IAAI,CAACoB,QAAQ,CAACK,MAAM,CAACC,EAAE,EAAE;UAE5C,IAAIC,MAAK,GAAI,IAAI5B,KAAK,CAACC,IAAI,CAAC4B,YAAY,EAAE;UAC1CC,OAAO,CAACC,GAAG,CAACP,MAAM;UAClB,KAAK,IAAIQ,IAAI,CAAC,EAAEA,IAAIR,MAAM,CAACS,MAAM,EAAED,CAAC,EAAE,EAAE;YACpC,IAAInC,IAAG,GAAI2B,MAAM,CAACQ,CAAC,CAAC;YACpBJ,MAAM,CAACM,MAAM,CAAC,IAAIlC,KAAK,CAACC,IAAI,CAACe,MAAM,CAACnB,IAAI,CAACsC,CAAC,EAAEtC,IAAI,CAACuC,CAAC,CAAC,CAAC;YACpD,IAAIC,MAAK,GAAI,IAAIrC,KAAK,CAACC,IAAI,CAACe,MAAM,CAACnB,IAAI,CAACsC,CAAC,EAAEtC,IAAI,CAACuC,CAAC,CAAC;UAEtD;UACA,IAAI,CAAClB,GAAG,CAACoB,SAAS,CAACV,MAAM,CAAC;;UAG1B;;UAEA;UACA,MAAMW,MAAK,GAAI,IAAIvC,KAAK,CAACC,IAAI,CAACuC,MAAM,CAAC;YACjCtB,GAAG,EAAEA,GAAG;YACRuB,QAAQ,EAAEJ;UACd,CAAC,CAAC;;UAEF;UACA,IAAI,CAACnB,GAAG,CAACwB,SAAS,CAACL,MAAM,CAAC;QAC5B,OAAO;UACLP,OAAO,CAACC,GAAG,CAAC,OAAO;QACrB;MACF,CAAC,CAAC;IAGJ;EACF;AACF,CAAC","names":["name","data","mounted","window","kakao","maps","initMap","script","document","createElement","onload","load","src","head","appendChild","methods","container","getElementById","options","center","LatLng","level","map","Map","geocoder","services","Geocoder","addressSearch","result","status","Status","OK","bounds","LatLngBounds","console","log","i","length","extend","y","x","coords","setBounds","marker","Marker","position","setCenter"],"sourceRoot":"","sources":["/Users/isg/Desktop/work/webstudy/Django-vue-library/vue-templates/src/components/inner/Map.vue"],"sourcesContent":["<template>\n  <div>\n    <div id=\"map\" style=\"width:500px;height:400px;\"></div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"Map\",\n  data() {\n  },\n  mounted() {\n    if (window.kakao && window.kakao.maps) {\n      this.initMap();\n    } else {\n      const script = document.createElement(\"script\");\n      /* global kakao */\n      script.onload = () => kakao.maps.load(this.initMap);\n      script.src = \"//dapi.kakao.com/v2/maps/sdk.js?autoload=false&appkey=c39b70c857a7f27e0adc5039c85b7e66&libraries=services\";\n\n      document.head.appendChild(script);\n    }\n  },\n  methods: {\n    initMap() {\n      const container = document.getElementById(\"map\");\n      const options = {\n        center: new kakao.maps.LatLng(33.450701, 126.570667),\n        level: 3,\n      };\n\n      this.map = new kakao.maps.Map(container, options);\n\n      // 주소-좌표 변환 객체를 생성합니다\n      this.geocoder = new kakao.maps.services.Geocoder();\n\n      // 주소로 좌표를 검색합니다\n      this.geocoder.addressSearch('경기 용인시 기흥구 흥덕1로 13 흥덕IT밸리', (result, status) => {\n        // 정상적으로 검색이 완료됐으면 \n        if (status === kakao.maps.services.Status.OK) {\n\n          let bounds = new kakao.maps.LatLngBounds();\n          console.log(result)\n          for (let i = 0; i < result.length; i++) {\n              let data = result[i];\n              bounds.extend(new kakao.maps.LatLng(data.y, data.x));\n              let coords = new kakao.maps.LatLng(data.y, data.x);\n\n          }\n          this.map.setBounds(bounds);\n\n\n          //const coords = new kakao.maps.LatLng(result[0].y, result[0].x);\n\n          // 결과값으로 받은 위치를 마커로 표시합니다\n          const marker = new kakao.maps.Marker({\n              map: map,\n              position: coords\n          });\n\n          // 지도의 중심을 결과값으로 받은 위치로 이동시킵니다\n          this.map.setCenter(coords);\n        } else {\n          console.log('error')\n        }\n      });\n\n\n    },\n  },\n};\n</script>\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}