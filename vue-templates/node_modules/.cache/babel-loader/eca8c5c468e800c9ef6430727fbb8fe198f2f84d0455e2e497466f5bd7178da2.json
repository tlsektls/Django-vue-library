{"ast":null,"code":"import { getAPI } from '@/axios-api';\nexport default {\n  name: 'News-list',\n  data() {\n    return {\n      newsData: []\n    };\n  },\n  props: {\n    //listArray: {\n    //  type: Array,\n    //  required: true\n    //},\n    pageSize: {\n      type: Number,\n      required: false,\n      default: 5\n    }\n  },\n  components: {\n    Header,\n    Footer,\n    SearchBar\n  },\n  created() {\n    getAPI.get('/newsboard/').then(response => {\n      console.log(response);\n      console.log('newsboard API has recieved data');\n      this.newsData = response.data;\n    }).catch(err => {\n      console.log(err);\n    });\n  },\n  methods: {\n    nextPage() {\n      this.pageNum += 1;\n    },\n    movePage(e) {\n      this.pageNum = e;\n    },\n    prevPage() {\n      this.pageNum -= 1;\n    }\n  },\n  computed: {\n    pageCount() {\n      let listLeng = this.newsData.length,\n        listSize = this.pageSize,\n        page = Math.floor(listLeng / listSize);\n      page = Math.floor((listLeng - 1) / listSize) + 1;\n      return page;\n    },\n    newsData() {\n      const start = this.pageNum * this.pageSize,\n        end = start + this.pageSize;\n      return this.newsData.filter(val => {\n        var searchVal = val.news_title.toUpperCase().indexOf(this.boardSearch.toUpperCase()) >= 0;\n        return searchVal;\n      }).slice(start, end);\n    }\n    //boardSearch(val){},\n  }\n};","map":{"version":3,"mappings":"AAgBE,SAASA,MAAK,QAAS,aAAY;AAErC,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,IAAG,GAAK;IACN,OAAO;MACLC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,KAAK,EAAE;IACL;IACA;IACA;IACA;IACAC,QAAQ,EAAE;MACRC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE,KAAK;MACfC,OAAO,EAAE;IACX;EACF,CAAC;EACFC,UAAU,EAAE;IACTC,MAAM;IACNC,MAAM;IACNC;EACF,CAAC;EACDC,OAAM,GAAK;IACTd,MAAM,CAACe,GAAG,CAAC,aAAa,EACrBC,IAAI,CAACC,QAAO,IAAK;MAChBC,OAAO,CAACC,GAAG,CAACF,QAAQ;MACpBC,OAAO,CAACC,GAAG,CAAC,iCAAiC;MAC7C,IAAI,CAAChB,QAAO,GAAIc,QAAQ,CAACf,IAAG;IAC9B,CAAC,EACAkB,KAAK,CAACC,GAAE,IAAK;MACZH,OAAO,CAACC,GAAG,CAACE,GAAG;IACjB,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACPC,QAAO,GAAK;MACV,IAAI,CAACC,OAAM,IAAK,CAAC;IACnB,CAAC;IACDC,QAAQ,CAACC,CAAC,EAAE;MACV,IAAI,CAACF,OAAM,GAAIE,CAAC;IAClB,CAAC;IACDC,QAAO,GAAK;MACV,IAAI,CAACH,OAAM,IAAK,CAAC;IACnB;EACF,CAAC;EACDI,QAAQ,EAAE;IACRC,SAAQ,GAAK;MACX,IAAIC,QAAO,GAAI,IAAI,CAAC3B,QAAQ,CAAC4B,MAAM;QAC/BC,QAAO,GAAI,IAAI,CAAC3B,QAAQ;QACxB4B,IAAG,GAAIC,IAAI,CAACC,KAAK,CAACL,QAAO,GAAIE,QAAQ,CAAC;MAC1CC,IAAG,GAAIC,IAAI,CAACC,KAAK,CAAC,CAACL,QAAO,GAAI,CAAC,IAAIE,QAAQ,IAAI;MAC/C,OAAOC,IAAI;IACb,CAAC;IACD9B,QAAO,GAAK;MACV,MAAMiC,KAAI,GAAI,IAAI,CAACZ,OAAM,GAAI,IAAI,CAACnB,QAAQ;QACxCgC,GAAE,GAAID,KAAI,GAAI,IAAI,CAAC/B,QAAQ;MAEhC,OAAO,IAAI,CAACF,QAAQ,CAACmC,MAAM,CAAEC,GAAG,IAAK;QAChC,IAAIC,SAAQ,GAAID,GAAG,CAACE,UAAU,CAACC,WAAW,EAAE,CAACC,OAAO,CAAC,IAAI,CAACC,WAAW,CAACF,WAAW,EAAE,KAAK,CAAC;QACzF,OAAOF,SAAQ;MACjB,CAAC,CAAC,CAACK,KAAK,CAACT,KAAK,EAAEC,GAAG,CAAC;IACtB;IACA;EACF;AACF","names":["getAPI","name","data","newsData","props","pageSize","type","Number","required","default","components","Header","Footer","SearchBar","created","get","then","response","console","log","catch","err","methods","nextPage","pageNum","movePage","e","prevPage","computed","pageCount","listLeng","length","listSize","page","Math","floor","start","end","filter","val","searchVal","news_title","toUpperCase","indexOf","boardSearch","slice"],"sourceRoot":"","sources":["/Users/isg/Desktop/work/webstudy/Django-vue-library/vue-templates/src/views/board/_News.vue"],"sourcesContent":["<template>\n  <div class=\"\">\n    <!--<table>\n      <tr>\n        <th>뉴스 제목</th>\n        <th>뉴스 날짜</th>\n      </tr>\n      <tr v-for=\"news in newsData\" :key=\"news\">\n        <td><router-link :to=\"{ name:'NewsInner', params:{id:news.id}}\">{{ news.news_title }}</router-link></td>\n        <td>{{ news.news_date }}</td>\n      </tr>\n    </table>-->\n  </div>\n</template>\n\n<script>\n  import { getAPI } from '@/axios-api'\n\nexport default {\n  name: 'News-list',\n  data () {\n    return {\n      newsData: [],\n    }\n  },\n  props: {\n    //listArray: {\n    //  type: Array,\n    //  required: true\n    //},\n    pageSize: {\n      type: Number,\n      required: false,\n      default: 5\n    }\n  },\n\tcomponents: {\n    Header,\n    Footer,\n    SearchBar\n  },\n  created () {\n    getAPI.get('/newsboard/')\n      .then(response => {\n        console.log(response)\n        console.log('newsboard API has recieved data')\n        this.newsData = response.data\n      })\n      .catch(err => {\n        console.log(err)\n      })\n  },\n  methods: {\n    nextPage () {\n      this.pageNum += 1;\n    },\n    movePage(e) {\n      this.pageNum = e;\n    },\n    prevPage () {\n      this.pageNum -= 1;\n    }\n  },\n  computed: {\n    pageCount () {\n      let listLeng = this.newsData.length,\n          listSize = this.pageSize,\n          page = Math.floor(listLeng / listSize);\n      page = Math.floor((listLeng - 1) / listSize) + 1\n      return page;\n    },\n    newsData () {\n      const start = this.pageNum * this.pageSize,\n        end = start + this.pageSize;\n\n\t\t\treturn this.newsData.filter((val) => {\n        var searchVal = val.news_title.toUpperCase().indexOf(this.boardSearch.toUpperCase()) >= 0;\n        return searchVal\n      }).slice(start, end);\n    }\n    //boardSearch(val){},\n  }\n}\n</script>\n\n<style>\ntable {\n  width: 100%;\n  border-collapse: collapse;\n}\ntable th {\n  font-size: 1.2rem;\n}\ntable tr {\n  height: 2rem;\n  text-align: center;\n  border-bottom: 1px solid #505050;\n}\ntable tr:first-of-type {\n  border-top: 2px solid #404040;\n}\ntable tr td {\n  padding: 1rem 0;\n  font-size: 1.1rem;\n}\n.btn-cover {\n  margin-top: 1.5rem;\n  text-align: center;\n}\n.btn-cover .page-btn {\n  width: 5rem;\n  height: 2rem;\n  letter-spacing: 0.5px;\n}\n.btn-cover .page-count {\n  padding: 0 1rem;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}