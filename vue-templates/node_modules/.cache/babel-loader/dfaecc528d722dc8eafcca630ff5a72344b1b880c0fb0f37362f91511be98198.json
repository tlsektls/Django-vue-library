{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\"<table>\\n      <tr>\\n        <th>뉴스 제목</th>\\n        <th>뉴스 날짜</th>\\n      </tr>\\n      <tr v-for=\\\"news in newsData\\\" :key=\\\"news\\\">\\n        <td><router-link :to=\\\"{ name:'NewsInner', params:{id:news.id}}\\\">{{ news.news_title }}</router-link></td>\\n        <td>{{ news.news_date }}</td>\\n      </tr>\\n    </table>\")]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;AAAE;;uBAAbC,oBAWM,OAXNC,UAWM,GAVJC,kVASW","names":["class","_createElementBlock","_hoisted_1","_createCommentVNode"],"sourceRoot":"","sources":["/Users/isg/Desktop/work/webstudy/Django-vue-library/vue-templates/src/views/board/_News.vue"],"sourcesContent":["<template>\n  <div class=\"\">\n    <!--<table>\n      <tr>\n        <th>뉴스 제목</th>\n        <th>뉴스 날짜</th>\n      </tr>\n      <tr v-for=\"news in newsData\" :key=\"news\">\n        <td><router-link :to=\"{ name:'NewsInner', params:{id:news.id}}\">{{ news.news_title }}</router-link></td>\n        <td>{{ news.news_date }}</td>\n      </tr>\n    </table>-->\n  </div>\n</template>\n\n<script>\n  import { getAPI } from '@/axios-api'\n\nexport default {\n  name: 'News-list',\n  data () {\n    return {\n      newsData: [],\n    }\n  },\n  props: {\n    //listArray: {\n    //  type: Array,\n    //  required: true\n    //},\n    pageSize: {\n      type: Number,\n      required: false,\n      default: 5\n    }\n  },\n\tcomponents: {\n    Header,\n    Footer,\n    SearchBar\n  },\n  created () {\n    getAPI.get('/newsboard/')\n      .then(response => {\n        console.log(response)\n        console.log('newsboard API has recieved data')\n        this.newsData = response.data\n      })\n      .catch(err => {\n        console.log(err)\n      })\n  },\n  methods: {\n    nextPage () {\n      this.pageNum += 1;\n    },\n    movePage(e) {\n      this.pageNum = e;\n    },\n    prevPage () {\n      this.pageNum -= 1;\n    }\n  },\n  computed: {\n    pageCount () {\n      let listLeng = this.newsData.length,\n          listSize = this.pageSize,\n          page = Math.floor(listLeng / listSize);\n      page = Math.floor((listLeng - 1) / listSize) + 1\n      return page;\n    },\n    newsData () {\n      const start = this.pageNum * this.pageSize,\n        end = start + this.pageSize;\n\n\t\t\treturn this.newsData.filter((val) => {\n        var searchVal = val.news_title.toUpperCase().indexOf(this.boardSearch.toUpperCase()) >= 0;\n        return searchVal\n      }).slice(start, end);\n    }\n    //boardSearch(val){},\n  }\n}\n</script>\n\n<style>\ntable {\n  width: 100%;\n  border-collapse: collapse;\n}\ntable th {\n  font-size: 1.2rem;\n}\ntable tr {\n  height: 2rem;\n  text-align: center;\n  border-bottom: 1px solid #505050;\n}\ntable tr:first-of-type {\n  border-top: 2px solid #404040;\n}\ntable tr td {\n  padding: 1rem 0;\n  font-size: 1.1rem;\n}\n.btn-cover {\n  margin-top: 1.5rem;\n  text-align: center;\n}\n.btn-cover .page-btn {\n  width: 5rem;\n  height: 2rem;\n  letter-spacing: 0.5px;\n}\n.btn-cover .page-count {\n  padding: 0 1rem;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}