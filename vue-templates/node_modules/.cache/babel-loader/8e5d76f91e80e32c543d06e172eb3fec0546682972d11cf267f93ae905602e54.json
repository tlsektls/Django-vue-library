{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"map\",\n  style: {\n    \"width\": \"500px\",\n    \"height\": \"400px\"\n  }\n}, null, -1 /* HOISTED */);\nconst _hoisted_2 = [_hoisted_1];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, _hoisted_2);\n}","map":{"version":3,"mappings":";gCAEIA,oBAAsD;EAAjDC,EAAE,EAAC,KAAK;EAACC,KAAiC,EAAjC;IAAA;IAAA;EAAA;;oBAAdC,UAAsD;;uBADxDC,oBAEM","names":["_createElementVNode","id","style","_hoisted_1","_createElementBlock"],"sourceRoot":"","sources":["/Users/isg/Desktop/work/webstudy/Django-vue-library/vue-templates/src/components/inner/Map.vue"],"sourcesContent":["<template>\n  <div>\n    <div id=\"map\" style=\"width:500px;height:400px;\"></div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"Map\",\n  data() {\n  },\n  mounted() {\n    if (window.kakao && window.kakao.maps) {\n      this.initMap();\n    } else {\n      const script = document.createElement(\"script\");\n      /* global kakao */\n      script.onload = () => kakao.maps.load(this.initMap);\n      script.src = \"//dapi.kakao.com/v2/maps/sdk.js?autoload=false&appkey=c39b70c857a7f27e0adc5039c85b7e66&libraries=services\";\n\n      document.head.appendChild(script);\n    }\n  },\n  methods: {\n    initMap() {\n      const container = document.getElementById(\"map\");\n      const options = {\n        center: new kakao.maps.LatLng(33.450701, 126.570667),\n        level: 3,\n      };\n\n      this.map = new kakao.maps.Map(container, options);\n\n      // 주소-좌표 변환 객체를 생성합니다\n      this.geocoder = new kakao.maps.services.Geocoder();\n\n      // 주소로 좌표를 검색합니다\n      this.geocoder.addressSearch('경기 용인시 기흥구 흥덕1로 13 흥덕IT밸리', (result, status) => {\n        // 정상적으로 검색이 완료됐으면 \n        if (status === kakao.maps.services.Status.OK) {\n\n          let bounds = new kakao.maps.LatLngBounds();\n          for (let i = 0; i < result.length; i++) {\n              let data = result[i];\n              bounds.extend(new kakao.maps.LatLng(data.y, data.x));\n\n          let coords = new kakao.maps.LatLng((data.y, data.x));\n          // 결과값으로 받은 위치를 마커로 표시합니다\n          const marker = new kakao.maps.Marker({\n              map: map,\n              position: coords\n          });\n\n          }\n          this.map.setBounds(bounds);\n\n\n        } else {\n          console.log('error')\n        }\n      });\n\n\n    },\n  },\n};\n</script>\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}