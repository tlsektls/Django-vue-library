{"ast":null,"code":"import { getAPI } from '@/axios-api';\nimport { useRoute } from 'vue-router';\nimport Header from '@/components/Header';\nimport Footer from '@/components/Footer';\nexport default {\n  name: 'Author',\n  data() {\n    return {\n      authorData: [],\n      bookData: []\n    };\n  },\n  components: {\n    Header,\n    Footer\n  },\n  methods: {},\n  mounted() {\n    console.log(this.$route);\n  },\n  created() {\n    const route = useRoute();\n    const id = route.params.id;\n    getAPI.get(`/author/${id}/`).then(response => {\n      console.log('Author API has recieved data');\n      this.authorData = response.data;\n      console.log(this.authorData);\n    }).catch(err => {\n      console.log(err);\n    });\n    getAPI.get(`/bookSuggest/?author=${this.authorData.name}`).then(response => {\n      console.log('suggest-book API has recieved data');\n      console.log(response);\n      this.bookData = response.data;\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n};","map":{"version":3,"mappings":"AA8BE,SAASA,MAAK,QAAS,aAAY;AACnC,SAASC,QAAO,QAAS,YAAW;AACpC,OAAOC,MAAK,MAAO,qBAAoB;AACvC,OAAOC,MAAK,MAAO,qBAAoB;AACvC,eAAe;EACbC,IAAI,EAAE,QAAQ;EACdC,IAAG,GAAK;IACN,OAAO;MACLC,UAAU,EAAE,EAAE;MACdC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,UAAU,EAAE;IACVN,MAAM;IACNC;EACF,CAAC;EACDM,OAAM,EAAI,CACV,CAAC;EACDC,OAAO,GAAG;IACRC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,MAAM;EACzB,CAAC;EACDC,OAAM,GAAK;IACT,MAAMC,KAAI,GAAId,QAAQ,EAAE;IACxB,MAAMe,EAAC,GAAID,KAAK,CAACE,MAAM,CAACD,EAAE;IAE1BhB,MAAM,CAACkB,GAAG,CAAE,WAAUF,EAAG,GAAE,EACxBG,IAAI,CAACC,QAAO,IAAK;MAChBT,OAAO,CAACC,GAAG,CAAC,8BAA8B;MAC1C,IAAI,CAACN,UAAS,GAAIc,QAAQ,CAACf,IAAG;MAC9BM,OAAO,CAACC,GAAG,CAAC,IAAI,CAACN,UAAU;IAC7B,CAAC,EACAe,KAAK,CAACC,GAAE,IAAK;MACZX,OAAO,CAACC,GAAG,CAACU,GAAG;IACjB,CAAC;IAEHtB,MAAM,CAACkB,GAAG,CAAE,wBAAuB,IAAI,CAACZ,UAAU,CAACF,IAAK,EAAC,EACtDe,IAAI,CAACC,QAAO,IAAK;MAChBT,OAAO,CAACC,GAAG,CAAC,oCAAoC;MAChDD,OAAO,CAACC,GAAG,CAACQ,QAAQ;MACpB,IAAI,CAACb,QAAO,GAAIa,QAAQ,CAACf,IAAG;IAC9B,CAAC,EACAgB,KAAK,CAACC,GAAE,IAAK;MACZX,OAAO,CAACC,GAAG,CAACU,GAAG;IACjB,CAAC;EACL;AACF","names":["getAPI","useRoute","Header","Footer","name","data","authorData","bookData","components","methods","mounted","console","log","$route","created","route","id","params","get","then","response","catch","err"],"sourceRoot":"","sources":["/Users/isg/Desktop/work/webstudy/Django-vue-library/vue-templates/src/views/books/Author.vue"],"sourcesContent":["<template>\n  <div class=\"NoticeBoard\">\n    <Header></Header> \n\t\t\n      <div class=\"content\"><div class=\"container author\">        \n\t\t\t\t<h3>{{this.authorData.name}}</h3>\n\n        <div class=\"author-life\">\n          <span>{{this.authorData.date_of_birth}}</span>\n          <span v-if=\"authorData.date_of_birth != Null\"> ~ </span>\n          <span>{{this.authorData.date_of_death}}</span>\n        </div>\n\t\t\t\t<div class=\"author-intro\">{{this.authorData.intro}}</div>\n\t\n\n        <div class=\"author-book\">\n          <div v-for=\"book in bookData\" :key=\"book\" >\n            <img :src=\"'http://127.0.0.1:8000'+book.image\">\n            {{book.title}}\n            <!--<router-link :to=\"{ name:'book', params:{id:book.id}}\">{{book.title}}</router-link>-->\n          </div>\n        </div>\n\n      </div></div>\n\n    <Footer></Footer>\n  </div>\n</template>\n\n<script>\n  import { getAPI } from '@/axios-api'\n  import { useRoute } from 'vue-router'\n  import Header from '@/components/Header'\n  import Footer from '@/components/Footer'\n  export default {\n    name: 'Author',\n    data () {\n      return {\n        authorData: [],\n        bookData: [],\n      }\n    },\n    components: {\n      Header,\n      Footer,\n    },\n    methods : {\n    },\n    mounted() {\n      console.log(this.$route)\n    },\n    created () {\n      const route = useRoute();\n      const id = route.params.id;\n\n      getAPI.get(`/author/${id}/`)\n        .then(response => {\n          console.log('Author API has recieved data')\n          this.authorData = response.data\n          console.log(this.authorData)\n        })\n        .catch(err => {\n          console.log(err)\n        })\n\n      getAPI.get(`/bookSuggest/?author=${this.authorData.name}`)\n        .then(response => {\n          console.log('suggest-book API has recieved data')\n          console.log(response)\n          this.bookData = response.data\n        })\n        .catch(err => {\n          console.log(err)\n        })\n    },\n  }\n</script>\n\n<style scoped>\n\n</style>\n\nbook = Book.objects.filter(title=\"asd\")\nauth = Book.objects.filter(auth__name=\"test\")"]},"metadata":{},"sourceType":"module","externalDependencies":[]}